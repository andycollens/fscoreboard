#!/bin/bash

# =============================================================================
# FSCOREBOARD - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –¥–ª—è Ubuntu Server
# =============================================================================
# –í–µ—Ä—Å–∏—è: 1.0.0
# –ê–≤—Ç–æ—Ä: FSCOREBOARD Team
# –û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ FSCOREBOARD –Ω–∞ Ubuntu Server
# =============================================================================

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOG_FILE="/tmp/fscoreboard_install.log"
exec > >(tee -a "$LOG_FILE")
exec 2>&1

# –§—É–Ω–∫—Ü–∏–∏
print_header() {
    echo -e "${BLUE}"
    echo "============================================================================="
    echo "üöÄ FSCOREBOARD - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫"
    echo "============================================================================="
    echo -e "${NC}"
    echo -e "${YELLOW}‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ü–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –æ–±–Ω–æ–≤–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É:${NC}"
    echo -e "${CYAN}   sudo apt update && sudo apt upgrade -y${NC}"
    echo ""
}

print_step() {
    echo -e "${YELLOW}üìã $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${CYAN}‚ÑπÔ∏è  $1${NC}"
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
generate_random_string() {
    local length=${1:-32}
    openssl rand -hex $((length/2))
}

generate_jwt_secret() {
    openssl rand -base64 64 | tr -d "=+/" | cut -c1-64
}

generate_api_token() {
    openssl rand -hex 32
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
check_system() {
    print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Ubuntu
    if ! grep -q "Ubuntu" /etc/os-release; then
        print_error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è Ubuntu Server"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Ubuntu
    UBUNTU_VERSION=$(lsb_release -rs)
    if [[ $(echo "$UBUNTU_VERSION < 20.04" | bc -l) -eq 1 ]]; then
        print_error "–¢—Ä–µ–±—É–µ—Ç—Å—è Ubuntu 20.04 –∏–ª–∏ –Ω–æ–≤–µ–µ. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $UBUNTU_VERSION"
        exit 1
    fi
    
    print_success "–°–∏—Å—Ç–µ–º–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–∞ (Ubuntu $UBUNTU_VERSION)"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
install_packages() {
    print_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
    apt install -y curl wget git unzip software-properties-common build-essential \
                   nginx ufw fail2ban htop bc openssl
    
    print_success "–ü–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js
install_nodejs() {
    print_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js..."
    
    if command -v node &> /dev/null; then
        NODE_VERSION=$(node --version)
        print_info "Node.js —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $NODE_VERSION"
    else
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è NodeSource
        curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
        apt install -y nodejs
        
        NODE_VERSION=$(node --version)
        print_success "Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $NODE_VERSION"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2
install_pm2() {
    print_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2..."
    
    if command -v pm2 &> /dev/null; then
        PM2_VERSION=$(pm2 --version)
        print_info "PM2 —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $PM2_VERSION"
    else
        npm install -g pm2
        PM2_VERSION=$(pm2 --version)
        print_success "PM2 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $PM2_VERSION"
    fi
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ PM2
    pm2 startup systemd -u $SUDO_USER --hp /home/$SUDO_USER || true
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
setup_firewall() {
    print_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞..."
    
    ufw --force enable
    ufw allow ssh
    ufw allow 'Nginx Full'
    ufw allow 3000/tcp comment 'FSCOREBOARD App'
    
    print_success "–§–∞–π—Ä–≤–æ–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
clone_project() {
    print_step "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞..."
    
    PROJECT_DIR="/opt/fscoreboard"
    GITHUB_REPO="https://github.com/andycollens/fscoreboard.git"
    
    if [ -d "$PROJECT_DIR" ]; then
        print_info "–ü—Ä–æ–µ–∫—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º..."
        cd "$PROJECT_DIR"
        git pull origin main
    else
        git clone "$GITHUB_REPO" "$PROJECT_DIR"
        cd "$PROJECT_DIR"
    fi
    
    print_success "–ü—Ä–æ–µ–∫—Ç –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω –≤ $PROJECT_DIR"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    print_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞..."
    
    cd "$PROJECT_DIR"
    npm install --production
    
    print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
generate_config() {
    print_step "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    JWT_SECRET=$(generate_jwt_secret)
    API_TOKEN=$(generate_api_token)
    APP_PORT=${APP_PORT:-3000}
    
    # –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
    cat > "$PROJECT_DIR/.env" << EOF
# Server Configuration
PORT=$APP_PORT
NODE_ENV=production

# Security
JWT_SECRET=$JWT_SECRET
API_TOKEN=$API_TOKEN

# CORS
CORS_ORIGIN=*

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Logging
LOG_LEVEL=info

# Generated on: $(date)
EOF
    
    print_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"
    print_info "API Token: $API_TOKEN"
    print_info "JWT Secret: ${JWT_SECRET:0:20}..."
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx
setup_nginx() {
    print_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx
    cat > /etc/nginx/sites-available/fscoreboard << EOF
server {
    listen 80;
    server_name _;
    
    # –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    location / {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
    }
    
    # WebSocket –ø–æ–¥–¥–µ—Ä–∂–∫–∞
    location /socket.io/ {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
    
    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    location /public/ {
        alias $PROJECT_DIR/public/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # –õ–æ–≥–∏
    access_log /var/log/nginx/fscoreboard_access.log;
    error_log /var/log/nginx/fscoreboard_error.log;
}
EOF
    
    # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    ln -sf /etc/nginx/sites-available/fscoreboard /etc/nginx/sites-enabled/
    rm -f /etc/nginx/sites-enabled/default
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    nginx -t
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Nginx
    systemctl reload nginx
    
    print_success "Nginx –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
start_application() {
    print_step "–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    cd "$PROJECT_DIR"
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    pm2 delete fscoreboard 2>/dev/null || true
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    pm2 start ecosystem.config.js
    pm2 save
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
    sleep 5
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    if pm2 list | grep -q "fscoreboard.*online"; then
        print_success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ"
    else
        print_error "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
        pm2 logs fscoreboard --lines 20
        exit 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
create_update_script() {
    print_step "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
    
    cat > /usr/local/bin/fscoreboard-update << 'EOF'
#!/bin/bash
# FSCOREBOARD Update Script

PROJECT_DIR="/opt/fscoreboard"
cd "$PROJECT_DIR"

echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ FSCOREBOARD..."

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
git pull origin main

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
npm install --production

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
pm2 stop fscoreboard 2>/dev/null || true
pm2 delete fscoreboard 2>/dev/null || true

# –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
pm2 start ecosystem.config.js
pm2 save

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
if [ -f "/etc/nginx/sites-available/fscoreboard" ]; then
    echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx..."
    sed -i 's/localhost:3000/localhost:3001/g' /etc/nginx/sites-available/fscoreboard
    nginx -t && systemctl reload nginx
    echo "‚úÖ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
fi

echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: $(date)"
EOF
    
    chmod +x /usr/local/bin/fscoreboard-update
    
    print_success "–°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω: fscoreboard-update"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤
setup_log_rotation() {
    print_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ logrotate –¥–ª—è FSCOREBOARD
    cat > /etc/logrotate.d/fscoreboard << 'EOF'
/opt/fscoreboard/logs/*.log {
    daily
    missingok
    rotate 3
    compress
    delaycompress
    notifempty
    create 644 root root
    postrotate
        pm2 reloadLogs
    endscript
}
EOF
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PM2 logrotate
    pm2 install pm2-logrotate
    pm2 set pm2-logrotate:max_size 10M
    pm2 set pm2-logrotate:retain 3
    pm2 set pm2-logrotate:compress true
    pm2 set pm2-logrotate:dateFormat YYYY-MM-DD_HH-mm-ss
    
    print_success "–†–æ—Ç–∞—Ü–∏—è –ª–æ–≥–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ (3 –¥–Ω—è, 10MB)"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
create_monitor_script() {
    print_step "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
    
    cat > /usr/local/bin/fscoreboard-status << 'EOF'
#!/bin/bash
# FSCOREBOARD Status Script

echo "üìä –°—Ç–∞—Ç—É—Å FSCOREBOARD:"
echo "========================"

# –°—Ç–∞—Ç—É—Å PM2
echo "üîÑ PM2 Status:"
pm2 status

echo ""

# –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
pm2 logs fscoreboard --lines 5

echo ""

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
echo "üíª –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
pm2 monit --no-interaction
EOF
    
    chmod +x /usr/local/bin/fscoreboard-status
    
    print_success "–°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ–∑–¥–∞–Ω: fscoreboard-status"
}

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
final_check() {
    print_step "–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    if systemctl is-active --quiet nginx; then
        print_success "Nginx —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        print_error "Nginx –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    if pm2 list | grep -q "fscoreboard.*online"; then
        print_success "FSCOREBOARD —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        print_error "FSCOREBOARD –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
    if netstat -tlnp | grep -q ":$APP_PORT"; then
        print_success "–ü–æ—Ä—Ç $APP_PORT –æ—Ç–∫—Ä—ã—Ç"
    else
        print_error "–ü–æ—Ä—Ç $APP_PORT –Ω–µ –æ—Ç–∫—Ä—ã—Ç"
    fi
    
    # –¢–µ—Å—Ç HTTP
    if curl -f -s http://localhost:$APP_PORT/health > /dev/null; then
        print_success "HTTP —Ç–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω"
    else
        print_error "HTTP —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω"
    fi
}

# –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
show_completion_info() {
    echo -e "${GREEN}"
    echo "============================================================================="
    echo "üéâ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!"
    echo "============================================================================="
    echo -e "${NC}"
    
    echo -e "${CYAN}üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:${NC}"
    echo "‚Ä¢ Node.js: $(node --version)"
    echo "‚Ä¢ NPM: $(npm --version)"
    echo "‚Ä¢ PM2: $(pm2 --version)"
    echo "‚Ä¢ Nginx: $(nginx -v 2>&1)"
    
    echo ""
    echo -e "${CYAN}üåê –î–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é:${NC}"
    SERVER_IP=$(curl -s ifconfig.me)
    echo "‚Ä¢ –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: http://$SERVER_IP/private/control.html?token=MySecret111"
    echo "‚Ä¢ –¢–∞–±–ª–æ vMix: http://$SERVER_IP/scoreboard_vmix.html"
    echo "‚Ä¢ –ü–µ—Ä–µ—Ä—ã–≤: http://$SERVER_IP/htbreak.html"
    echo "‚Ä¢ –°—á–µ—Ç –ø–µ—Ä–µ—Ä—ã–≤–∞: http://$SERVER_IP/htbreak_score.html"
    echo "‚Ä¢ –ó–∞—Å—Ç–∞–≤–∫–∞: http://$SERVER_IP/preloader.html"
    echo "‚Ä¢ API Health: http://$SERVER_IP/api/health"
    
    echo ""
    echo -e "${CYAN}üéØ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:${NC}"
    echo "‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Ç–∞–π–º–µ—Ä–∞"
    echo "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—Ç—á–µ–π"
    echo "‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ URL –æ–≤–µ—Ä–ª–µ–µ–≤ –≤ vMix –∫–∞–∫ Web –∏—Å—Ç–æ—á–Ω–∏–∫–∏"
    echo "‚Ä¢ –£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ç–∞–π–º–µ—Ä–æ–º, —Å—á–µ—Ç–æ–º –∏ —Ü–≤–µ—Ç–∞–º–∏ –∫–æ–º–∞–Ω–¥"
    
    echo ""
    echo -e "${CYAN}üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π:${NC}"
    echo "‚Ä¢ –°—Ç–∞—Ç—É—Å: fscoreboard-status"
    echo "‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: fscoreboard-update"
    echo "‚Ä¢ –õ–æ–≥–∏: pm2 logs fscoreboard"
    echo "‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: pm2 restart fscoreboard"
    
    echo ""
    echo -e "${CYAN}üìÅ –§–∞–π–ª—ã:${NC}"
    echo "‚Ä¢ –ü—Ä–æ–µ–∫—Ç: $PROJECT_DIR"
    echo "‚Ä¢ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: $PROJECT_DIR/.env"
    echo "‚Ä¢ –õ–æ–≥–∏: $PROJECT_DIR/logs/"
    echo "‚Ä¢ Nginx: /etc/nginx/sites-available/fscoreboard"
    
    echo ""
    echo -e "${YELLOW}‚ö†Ô∏è  –í–∞–∂–Ω–æ:${NC}"
    echo "‚Ä¢ –¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: MySecret111"
    echo "‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ API Token –∏–∑ .env —Ñ–∞–π–ª–∞"
    echo "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω"
    echo "‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ —Å–∏—Å—Ç–µ–º—É: apt update && apt upgrade"
    
    echo ""
    echo -e "${GREEN}üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:${NC}"
    echo "‚Ä¢ README: $PROJECT_DIR/README.md"
    echo "‚Ä¢ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç: $PROJECT_DIR/QUICK_START.md"
    echo "‚Ä¢ –ê–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∞: $PROJECT_DIR/AUTO_INSTALL.md"
    
    echo ""
    echo -e "${CYAN}üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–æ–≤:${NC}"
    echo "‚Ä¢ –†–æ—Ç–∞—Ü–∏—è: –µ–∂–µ–¥–Ω–µ–≤–Ω–æ, —Ö—Ä–∞–Ω–µ–Ω–∏–µ 3 –¥–Ω—è"
    echo "‚Ä¢ –†–∞–∑–º–µ—Ä: –º–∞–∫—Å–∏–º—É–º 10MB –Ω–∞ —Ñ–∞–π–ª"
    echo "‚Ä¢ –°–∂–∞—Ç–∏–µ: –≤–∫–ª—é—á–µ–Ω–æ –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤"
    echo "‚Ä¢ PM2 logrotate: –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
    
    echo ""
    echo -e "${GREEN}üöÄ FSCOREBOARD –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!${NC}"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_header
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
    if [ "$EUID" -ne 0 ]; then
        print_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ root: sudo $0"
        exit 1
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    APP_PORT=${APP_PORT:-3000}
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    check_system
    install_packages
    install_nodejs
    install_pm2
    setup_firewall
    clone_project
    install_dependencies
    generate_config
    setup_nginx
    start_application
    setup_log_rotation
    create_update_script
    create_monitor_script
    final_check
    show_completion_info
    
    print_success "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ $LOG_FILE"
}

# –ó–∞–ø—É—Å–∫
main "$@"
